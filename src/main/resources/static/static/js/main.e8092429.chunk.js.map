{"version":3,"sources":["components/Project/CreateProjectButton.js","actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","reportWebVitals.js","index.js"],"names":["CreateProjectButton","Fragment","Link","to","className","GET_ERRORS","GET_PROJECTS","GET_PROJECT","DELETE_PROJECT","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","SET_CURRENT_USER","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","projectIdentifier","projectName","description","onClick","bind","Component","connect","window","confirm","delete","Dashboard","getProjects","projects","map","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","initalState","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","Route","render","Redirect","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","Switch","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"oRAaeA,EAVa,WACxB,OACI,cAAC,IAAMC,SAAP,UACI,cAACC,EAAA,EAAD,CAAMC,GAAG,cAAcC,UAAU,sBAAjC,iC,gDCNCC,EAAa,aACbC,EAAe,eACfC,EAAc,cACdC,EAAiB,iBAIjBC,EAAc,cACdC,EAAmB,mBACnBC,EAAsB,sBAEtBC,EAAmB,mBCRnBC,EAAgB,SAACC,EAASC,GAAV,8CAAsB,WAAMC,GAAN,SAAAC,EAAA,+EAEzCC,IAAMC,KAAK,eAAgBL,GAFc,OAG/CC,EAAQK,KAAK,cACbJ,EAAS,CACPK,KAAMhB,EACNiB,QAAS,KANoC,gDAS/CN,EAAS,CACPK,KAAMhB,EACNiB,QAAS,KAAIC,SAASC,OAXuB,yDAAtB,uDCGvBC,E,4MACJC,cAAgB,SAAAC,GACd,EAAKC,MAAMC,cAAcF,I,4CAG3B,WACE,IAAQb,EAAYgB,KAAKF,MAAjBd,QACR,OACE,qBAAKV,UAAU,YAAf,SACE,qBAAKA,UAAU,+BAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SACE,sBAAMA,UAAU,UAAhB,SAA2BU,EAAQiB,sBAErC,sBAAK3B,UAAU,0BAAf,UACE,6BAAKU,EAAQkB,cACb,4BAAIlB,EAAQmB,iBAEd,qBAAK7B,UAAU,6BAAf,SACE,qBAAIA,UAAU,aAAd,UACE,cAACF,EAAA,EAAD,CAAMC,GAAE,wBAAmBW,EAAQiB,mBAAnC,SACE,oBAAI3B,UAAU,wBAAd,SACE,mBAAGA,UAAU,4BAAb,iCAGJ,cAACF,EAAA,EAAD,CAAMC,GAAE,yBAAoBW,EAAQiB,mBAApC,SACE,oBAAI3B,UAAU,yBAAd,SACE,mBAAGA,UAAU,kBAAb,sCAIJ,oBACEA,UAAU,yBACV8B,QAASJ,KAAKJ,cAAcS,KAC1BL,KACAhB,EAAQiB,mBAJZ,SAOE,mBAAG3B,UAAU,0BAAb,+C,GAtCQgC,aAqDXC,cACb,KACA,CAAER,cDtByB,SAAAF,GAAE,8CAAI,WAAMX,GAAN,SAAAC,EAAA,0DAE/BqB,OAAOC,QACL,6EAH6B,gCAMzBrB,IAAMsB,OAAN,uBAA6Bb,IANJ,OAO/BX,EAAS,CACPK,KAAMb,EACNc,QAASK,IAToB,2CAAJ,wDCoBhBU,CAGbZ,GCvDIgB,E,uKAEF,WACIX,KAAKF,MAAMc,gB,oBAGf,WAEI,IAAOC,EAAYb,KAAKF,MAAMd,QAAvB6B,SAEP,OACI,qBAAKvC,UAAU,WAAf,SACA,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,wBAAd,sBACA,uBACI,cAAC,EAAD,IACJ,uBACA,uBAEIuC,EAASC,KAAI,SAAA9B,GAAO,OAChB,cAAC,EAAD,CAA8BA,QAASA,GAArBA,EAAQa,oB,GAtBlCS,aA2CTC,eAJS,SAAAQ,GAAK,MAAK,CAC9B/B,QAAQ+B,EAAM/B,WAGqB,CAAC4B,YF/Bb,yDAAM,WAAM1B,GAAN,eAAAC,EAAA,sEACbC,IAAM4B,IAAI,oBADG,OACzBC,EADyB,OAE/B/B,EAAS,CACPK,KAAMf,EACNgB,QAASyB,EAAIvB,OAJgB,2CAAN,wDE+BZa,CAAuCI,G,QCxCvCO,EARK,SAAAC,GACdA,EACF/B,IAAMgC,SAASC,QAAQC,OAAvB,cAAiDH,SAE1C/B,IAAMgC,SAASC,QAAQC,OAAvB,eCwCEC,EAAS,kBAAM,SAAArC,GAC1BsC,aAAaC,WAAW,YACxBP,GAAY,GACZhC,EAAS,CACPK,KAAMT,EACNU,QAAS,OC7CPkC,E,4JACJ,WACE1B,KAAKF,MAAMyB,SACXf,OAAOmB,SAASC,KAAO,M,oBAEzB,WACE,IAiDIC,EAjDJ,EAA6B7B,KAAKF,MAAMgC,SAAhCC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,KAEdC,EACJ,sBAAK3D,UAAU,2BAA2BuB,GAAG,aAA7C,UACE,oBAAIvB,UAAU,qBAAd,SACE,oBAAIA,UAAU,WAAd,SACE,cAACF,EAAA,EAAD,CAAME,UAAU,WAAWD,GAAG,aAA9B,2BAMJ,qBAAIC,UAAU,qBAAd,UACE,oBAAIA,UAAU,WAAd,SACE,eAACF,EAAA,EAAD,CAAME,UAAU,WAAWD,GAAG,aAA9B,UACE,mBAAGC,UAAU,4BACZ0D,EAAKE,cAGV,oBAAI5D,UAAU,WAAd,SACE,cAACF,EAAA,EAAD,CACEE,UAAU,WACVD,GAAG,UACH+B,QAASJ,KAAKuB,OAAOlB,KAAKL,MAH5B,4BAYFmC,EACJ,qBAAK7D,UAAU,2BAA2BuB,GAAG,aAA7C,SACE,qBAAIvB,UAAU,qBAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAACF,EAAA,EAAD,CAAME,UAAU,WAAWD,GAAG,YAA9B,uBAIF,oBAAIC,UAAU,WAAd,SACE,cAACF,EAAA,EAAD,CAAME,UAAU,WAAWD,GAAG,SAA9B,0BAgBR,OALEwD,EADEE,GAAcC,EACFC,EAEAE,EAId,qBAAK7D,UAAU,sDAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAACF,EAAA,EAAD,CAAME,UAAU,eAAeD,GAAG,IAAlC,8CAGA,wBACEC,UAAU,iBACViB,KAAK,SACL6C,cAAY,WACZC,cAAY,cAJd,SAME,sBAAM/D,UAAU,0BAEjBuD,W,GA7EUvB,aA6FNC,eAJS,SAAAQ,GAAK,MAAK,CAChCe,SAAUf,EAAMe,YAKhB,CAAEP,UAFWhB,CAGbmB,G,iEChGIY,E,kDACF,aAAc,IAAD,8BACT,gBAEKvB,MAAQ,CACTb,YAAa,GACbD,kBAAmB,GACnBE,YAAa,GACboC,WAAY,GACZC,SAAU,GACVC,OAAQ,IAEZ,EAAKC,SAAW,EAAKA,SAASrC,KAAd,gBAChB,EAAKsC,SAAW,EAAKA,SAAStC,KAAd,gBAZP,E,6DAgBb,SAA0BuC,GACnBA,EAAUH,QACTzC,KAAK6C,SAAS,CAACJ,OAAOG,EAAUH,W,sBAIxC,SAASK,GACL9C,KAAK6C,SAAL,eAAgBC,EAAEC,OAAOC,KAAQF,EAAEC,OAAOE,U,sBAG9C,SAASH,GACLA,EAAEI,iBACF,IAAMC,EAAa,CACfjD,YAAaF,KAAKe,MAAMb,YACxBD,kBAAmBD,KAAKe,MAAMd,kBAC9BE,YAAaH,KAAKe,MAAMZ,YACxBoC,WAAYvC,KAAKe,MAAMwB,WACvBC,SAAUxC,KAAKe,MAAMyB,UAEzBxC,KAAKF,MAAMf,cAAcoE,EAAWnD,KAAKF,MAAMb,W,oBAGnD,WACI,IAAOwD,EAAUzC,KAAKe,MAAf0B,OACP,OACQ,8BACJ,qBAAKnE,UAAU,UAAf,SACA,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,oBAAIA,UAAU,wBAAd,iCACA,uBACA,uBAAMqE,SAAU3C,KAAK2C,SAArB,UACI,sBAAKrE,UAAU,aAAf,UACI,uBAAOiB,KAAK,OAAOjB,UAAW8E,IAAW,+BACzC,CACI,aAAeX,EAAOvC,cACtBmD,YAAY,eAAeL,KAAK,cAAcC,MAAOjD,KAAKe,MAAMb,YAAawC,SAAU1C,KAAK0C,WAC/FD,EAAOvC,aACJ,qBAAK5B,UAAU,mBAAf,SAAmCmE,EAAOvC,iBAGlD,sBAAK5B,UAAU,aAAf,UACI,uBAAOiB,KAAK,OAAOjB,UAAW8E,IAAW,+BAA+B,CACpE,aAAeX,EAAOxC,oBACtBoD,YAAY,oBAAoBL,KAAK,oBAAoBC,MAAOjD,KAAKe,MAAMd,kBAAmByC,SAAU1C,KAAK0C,WAE5GD,EAAOxC,mBACJ,qBAAK3B,UAAU,mBAAf,SAAmCmE,EAAOxC,uBAItD,sBAAK3B,UAAU,aAAf,UACI,0BAAUA,UAAW8E,IAAW,+BAA+B,CAC3D,aAAeX,EAAOtC,cACtBkD,YAAY,sBAAsBL,KAAK,cAAcC,MAAOjD,KAAKe,MAAMZ,YAAcuC,SAAU1C,KAAK0C,WACvGD,EAAOtC,aACJ,qBAAK7B,UAAU,mBAAf,SAAmCmE,EAAOtC,iBAGlD,4CACA,qBAAK7B,UAAU,aAAf,SACI,uBAAOiB,KAAK,OAAOjB,UAAU,+BAA+B0E,KAAK,aAAaC,MAAOjD,KAAKe,MAAMwB,WAAaG,SAAU1C,KAAK0C,aAEhI,oDACA,qBAAKpE,UAAU,aAAf,SACI,uBAAOiB,KAAK,OAAOjB,UAAU,+BAA+B0E,KAAK,WAAWC,MAAOjD,KAAKe,MAAMyB,SAAWE,SAAU1C,KAAK0C,aAE5H,qBAAKpE,UAAU,cAAf,SACI,uBAAOiB,KAAK,SAASjB,UAAU,wC,GAtFtCgC,aA4GVC,eAJS,SAAAQ,GAAK,MAAK,CAC9B0B,OAAS1B,EAAM0B,UAKf,CAAC1D,iBAFUwB,CAGT+B,G,gBCnHAgB,EAAe,G,OCAfA,EAAe,CACnBzC,SAAU,GACV7B,QAAS,ICELsE,EAAe,CACnBC,cAAe,GACfC,aAAc,ICNVF,EAAe,CACnBvB,YAAY,EACZC,KAAM,IAGFyB,GAAuB,SAAAjE,GAC3B,QAAIA,GCFSkE,eAAgB,CAC7BjB,OJHa,WAAuC,IAA9B1B,EAA6B,uDAArBuC,EAAcK,EAAO,uCACjD,OAAOA,EAAOpE,MACV,KAAKhB,EACD,OAAOoF,EAAOnE,QAClB,QACI,OAAOuB,IIDjB/B,QHDa,WAAwC,IAA/B+B,EAA8B,uDAAtBuC,EAAcK,EAAQ,uCACpD,OAAQA,EAAOpE,MACb,KAAKf,EACH,OAAO,2BACFuC,GADL,IAEEF,SAAU8C,EAAOnE,UAGrB,KAAKf,EACH,OAAO,2BACFsC,GADL,IAEE/B,QAAS2E,EAAOnE,UAGpB,KAAKd,EACH,OAAO,2BACFqC,GADL,IAEEF,SAAUE,EAAMF,SAAS+C,QACvB,SAAA5E,GAAO,OAAIA,EAAQiB,oBAAsB0D,EAAOnE,aAGtD,QACE,OAAOuB,IGpBX8C,QFEa,WAAwC,IAA/B9C,EAA8B,uDAAtBuC,EAAcK,EAAQ,uCACpD,OAAQA,EAAOpE,MACb,KAAKZ,EACH,OAAO,2BACFoC,GADL,IAEEwC,cAAeI,EAAOnE,UAG1B,KAAKZ,EACH,OAAO,2BACFmC,GADL,IAEEyC,aAAcG,EAAOnE,UAGzB,KAAKX,EACH,OAAO,2BACFkC,GADL,IAEEwC,cAAexC,EAAMwC,cAAcK,QACjC,SAAAJ,GAAY,OAAIA,EAAaM,kBAAoBH,EAAOnE,aAI9D,QACE,OAAOuB,IExBXe,SDKa,WAAwC,IAA/Bf,EAA8B,uDAAtBuC,EAAcK,EAAQ,uCACpD,OAAQA,EAAOpE,MACb,KAAKT,EACH,OAAO,2BACFiC,GADL,IAEEgB,WAAY0B,GAAqBE,EAAOnE,SACxCwC,KAAM2B,EAAOnE,UAGjB,QACE,OAAOuB,MErBPgD,GAAc,GACdC,GAAa,CAACC,KAIdC,GACJ1D,OAAO2D,8BAAgC3D,OAAO2D,+BAmBjCC,GAjBX5D,OAAO6D,UAAUC,UAAUC,SAAS,WAAaL,GAC3CM,YACNC,GACAV,GACAW,YACEC,IAAe,WAAf,EAAmBX,IACnBE,KAIIM,YACNC,GACAV,GACAW,YAAQC,IAAe,WAAf,EAAmBX,MCnBzBY,G,kDAEJ,aAAe,IAAD,8BACZ,gBAEK7D,MAAQ,CACXlB,GAAI,GACJK,YAAa,GACbD,kBAAmB,GACnBE,YAAa,GACboC,WAAY,GACZC,SAAU,GACVC,OAAQ,IAEV,EAAKC,SAAW,EAAKA,SAASrC,KAAd,gBAChB,EAAKsC,SAAW,EAAKA,SAAStC,KAAd,gBAbJ,E,6DAgBd,SAA0BuC,GACpBA,EAAUH,QACZzC,KAAK6C,SAAS,CAAEJ,OAAQG,EAAUH,SAEpC,MAOIG,EAAU5D,QANZa,EADF,EACEA,GACAK,EAFF,EAEEA,YACAD,EAHF,EAGEA,kBACAE,EAJF,EAIEA,YACAoC,EALF,EAKEA,WACAC,EANF,EAMEA,SAGFxC,KAAK6C,SAAS,CACZhD,KACAK,cACAD,oBACAE,cACAoC,aACAC,e,+BAIJ,WACE,IAAQ3C,EAAOG,KAAKF,MAAM+E,MAAMC,OAAxBjF,GACRG,KAAKF,MAAMiF,WAAWlF,EAAIG,KAAKF,MAAMb,W,sBAGvC,SAAS6D,GACP9C,KAAK6C,SAAL,eAAiBC,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,sBAG5C,SAASH,GACPA,EAAEI,iBAEF,IAAM8B,EAAgB,CACpBnF,GAAIG,KAAKe,MAAMlB,GACfK,YAAaF,KAAKe,MAAMb,YACxBD,kBAAmBD,KAAKe,MAAMd,kBAC9BE,YAAaH,KAAKe,MAAMZ,YACxBoC,WAAYvC,KAAKe,MAAMwB,WACvBC,SAAUxC,KAAKe,MAAMyB,UAGvBxC,KAAKF,MAAMf,cAAciG,EAAehF,KAAKF,MAAMb,W,oBAGrD,WACE,IAAQwD,EAAWzC,KAAKe,MAAhB0B,OACR,OACE,qBAAKnE,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,oBAAIA,UAAU,wBAAd,iCACA,uBACA,uBAAMqE,SAAU3C,KAAK2C,SAArB,UACE,sBAAKrE,UAAU,aAAf,UACE,uBACEiB,KAAK,OACLjB,UAAW8E,IAAW,+BAAgC,CACpD,aAAcX,EAAOvC,cAEvBmD,YAAY,eACZL,KAAK,cACLC,MAAOjD,KAAKe,MAAMb,YAClBwC,SAAU1C,KAAK0C,WAEhBD,EAAOvC,aACN,qBAAK5B,UAAU,mBAAf,SAAmCmE,EAAOvC,iBAG9C,qBAAK5B,UAAU,aAAf,SACE,uBACEiB,KAAK,OACLjB,UAAU,+BACV+E,YAAY,oBACZL,KAAK,oBACLC,MAAOjD,KAAKe,MAAMd,kBAClByC,SAAU1C,KAAK0C,SACfuC,UAAQ,MAGZ,sBAAK3G,UAAU,aAAf,UACE,0BACEA,UAAW8E,IAAW,+BAAgC,CACpD,aAAcX,EAAOtC,cAEvBkD,YAAY,sBACZL,KAAK,cACLN,SAAU1C,KAAK0C,SACfO,MAAOjD,KAAKe,MAAMZ,cAEnBsC,EAAOtC,aACN,qBAAK7B,UAAU,mBAAf,SAAmCmE,EAAOtC,iBAG9C,4CACA,qBAAK7B,UAAU,aAAf,SACE,uBACEiB,KAAK,OACLjB,UAAU,+BACV0E,KAAK,aACLC,MAAOjD,KAAKe,MAAMwB,WAClBG,SAAU1C,KAAK0C,aAGnB,oDACA,qBAAKpE,UAAU,aAAf,SACE,uBACEiB,KAAK,OACLjB,UAAU,+BACV0E,KAAK,WACLC,MAAOjD,KAAKe,MAAMyB,SAClBE,SAAU1C,KAAK0C,aAInB,uBACEnD,KAAK,SACLjB,UAAU,mD,GA1IAgC,aAiKbC,gBALS,SAAAQ,GAAK,MAAK,CAChC/B,QAAS+B,EAAM/B,QAAQA,QACvByD,OAAQ1B,EAAM0B,UAKd,CAAEsC,Wb9IsB,SAAClF,EAAIZ,GAAL,8CAAiB,WAAMC,GAAN,eAAAC,EAAA,+EAErBC,IAAM4B,IAAN,uBAA0BnB,IAFL,OAEjCoB,EAFiC,OAGvC/B,EAAS,CACPK,KAAMd,EACNe,QAASyB,EAAIvB,OALwB,gDAQvCT,EAAQK,KAAK,cAR0B,yDAAjB,uDa8IVP,iBAFDwB,CAGbqE,ICpKIM,G,mKACJ,SAAcC,EAAYC,GACxBpF,KAAKF,MAAMuF,kBAAkBF,EAAYC,K,oBAE3C,WACE,IACIE,EACAC,EAFI/B,EAAiBxD,KAAKF,MAAtB0D,aAmBR,OAf8B,IAA1BA,EAAagC,WACfD,EAAgB,uBAChBD,EAAiB,QAGW,IAA1B9B,EAAagC,WACfD,EAAgB,wBAChBD,EAAiB,UAGW,IAA1B9B,EAAagC,WACfD,EAAgB,qBAChBD,EAAiB,OAIjB,sBAAKhH,UAAU,qBAAf,UACE,sBAAKA,UAAS,mCAA8BiH,GAA5C,iBACO/B,EAAaM,gBADpB,iBACmDwB,KAEnD,sBAAKhH,UAAU,qBAAf,UACE,oBAAIA,UAAU,aAAd,SAA4BkF,EAAaiC,UACzC,mBAAGnH,UAAU,2BAAb,SACGkF,EAAakC,qBAEhB,cAACtH,EAAA,EAAD,CACEC,GAAE,6BAAwBmF,EAAavD,kBAArC,YACAuD,EAAaM,iBAEfxF,UAAU,kBAJZ,2BASA,wBACEA,UAAU,sBACV8B,QAASJ,KAAKJ,cAAcS,KAC1BL,KACAwD,EAAavD,kBACbuD,EAAaM,iBALjB,8B,GA3CgBxD,aA8DXC,eACb,KACA,CAAE8E,kBCW6B,SAACF,EAAYC,GAAb,8CAAuB,WAAMlG,GAAN,SAAAC,EAAA,0DAEpDqB,OAAOC,QAAP,wCACmC2E,EADnC,mCAFoD,gCAM9ChG,IAAMsB,OAAN,uBAA6ByE,EAA7B,YAA2CC,IANG,OAOpDlG,EAAS,CACPK,KAAMV,EACNW,QAAS4F,IATyC,2CAAvB,wDDblB7E,CAGb2E,IENaS,G,4JA7Db,WAWE,IAVA,IAEMC,EAFyB5F,KAAKF,MAA5B+F,mBAEyB/E,KAAI,SAAA0C,GAAY,OAC/C,cAAC,GAAD,CAAmCA,aAAcA,GAA/BA,EAAa3D,OAG7BiG,EAAY,GACZC,EAAkB,GAClBC,EAAY,GAEPC,EAAI,EAAGA,EAAIL,EAAMM,OAAQD,IACW,UAAvCL,EAAMK,GAAGnG,MAAM0D,aAAa2C,QAC9BL,EAAUxG,KAAKsG,EAAMK,IAGoB,gBAAvCL,EAAMK,GAAGnG,MAAM0D,aAAa2C,QAC9BJ,EAAgBzG,KAAKsG,EAAMK,IAGc,SAAvCL,EAAMK,GAAGnG,MAAM0D,aAAa2C,QAC9BH,EAAU1G,KAAKsG,EAAMK,IAIzB,OACE,qBAAK3H,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,qBAAKA,UAAU,sCAAf,SACE,2CAGHwH,KAKH,sBAAKxH,UAAU,WAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,qBAAKA,UAAU,oCAAf,SACE,iDAGHyH,KAEH,sBAAKzH,UAAU,WAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,qBAAKA,UAAU,oCAAf,SACE,0CAGH0H,c,GAtDS1F,aCIhB8F,G,kDAEJ,aAAe,IAAD,8BACZ,gBACKrF,MAAQ,CACX0B,OAAQ,IAHE,E,qDAOd,WACE,IAAQ5C,EAAOG,KAAKF,MAAM+E,MAAMC,OAAxBjF,GACRG,KAAKF,MAAMuG,WAAWxG,K,uCAGxB,SAA0B+C,GACpBA,EAAUH,QACZzC,KAAK6C,SAAS,CAAEJ,OAAQG,EAAUH,W,oBAItC,WACE,IAII6D,EAJIzG,EAAOG,KAAKF,MAAM+E,MAAMC,OAAxBjF,GACA0D,EAAkBvD,KAAKF,MAAM+D,QAA7BN,cAkCR,OAFA+C,EA3BuB,SAAC7D,EAAQc,GAC9B,OAAIA,EAAc2C,OAAS,EAErBzD,EAAO8D,gBAEP,qBAAKjI,UAAU,iCAAiCkI,KAAK,QAArD,SACG/D,EAAO8D,kBAGH9D,EAAOxC,kBAEd,qBAAK3B,UAAU,iCAAiCkI,KAAK,QAArD,SACG/D,EAAOxC,oBAKV,qBAAK3B,UAAU,+BAA+BkI,KAAK,QAAnD,4CAMG,cAAC,GAAD,CAASX,mBAAoBtC,IAIzBkD,CA/BIzG,KAAKe,MAAhB0B,OA+B8Bc,GAGpC,sBAAKjF,UAAU,YAAf,UACE,cAACF,EAAA,EAAD,CAAMC,GAAE,0BAAqBwB,GAAMvB,UAAU,uBAA7C,SACE,mBAAGA,UAAU,qBAAb,oCAEF,uBACA,uBACCgI,S,GA/DkBhG,aAgFZC,gBALS,SAAAQ,GAAK,MAAK,CAChC8C,QAAS9C,EAAM8C,QACfpB,OAAQ1B,EAAM0B,UAKd,CAAE4D,WF5DsB,SAAAlB,GAAU,8CAAI,WAAMjG,GAAN,eAAAC,EAAA,+EAElBC,IAAM4B,IAAN,uBAA0BmE,IAFR,OAE9BlE,EAF8B,OAGpC/B,EAAS,CACPK,KAAMZ,EACNa,QAASyB,EAAIvB,OALqB,gDAQpCR,EAAS,CACPK,KAAMhB,EACNiB,QAAS,KAAIC,SAASC,OAVY,yDAAJ,wDE0DrBa,CAGb6F,ICnFIM,G,kDACJ,WAAY5G,GAAQ,IAAD,sBAEjB,IAAQD,GADR,cAAMC,IACcA,MAAM+E,MAAMC,OAAxBjF,GAFS,OAIjB,EAAKkB,MAAQ,CACX0E,QAAS,GACTC,mBAAoB,GACpBS,OAAQ,GACRX,SAAU,EACVmB,QAAS,GACT1G,kBAAmBJ,EACnB4C,OAAQ,IAEV,EAAKC,SAAW,EAAKA,SAASrC,KAAd,gBAChB,EAAKsC,SAAW,EAAKA,SAAStC,KAAd,gBAdC,E,6DAiBnB,SAA0BuC,GACpBA,EAAUH,QACZzC,KAAK6C,SAAS,CAAEJ,OAAQG,EAAUH,W,sBAKtC,SAASK,GACP9C,KAAK6C,SAAL,eAAiBC,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,sBAG5C,SAASH,GACPA,EAAEI,iBAEF,IAAM0D,EAAU,CACdnB,QAASzF,KAAKe,MAAM0E,QACpBC,mBAAoB1F,KAAKe,MAAM2E,mBAC/BS,OAAQnG,KAAKe,MAAMoF,OACnBX,SAAUxF,KAAKe,MAAMyE,SACrBmB,QAAS3G,KAAKe,MAAM4F,SAGtB3G,KAAKF,MAAM+G,eACT7G,KAAKe,MAAMd,kBACX2G,EACA5G,KAAKF,MAAMb,W,oBAIf,WACE,IAAQY,EAAOG,KAAKF,MAAM+E,MAAMC,OAAxBjF,GACA4C,EAAWzC,KAAKe,MAAhB0B,OACR,OACE,qBAAKnE,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,cAACF,EAAA,EAAD,CAAMC,GAAE,wBAAmBwB,GAAMvB,UAAU,gBAA3C,mCAGA,oBAAIA,UAAU,wBAAd,8BACA,mBAAGA,UAAU,mBAAb,yCACA,uBAAMqE,SAAU3C,KAAK2C,SAArB,UACE,sBAAKrE,UAAU,aAAf,UACE,uBACEiB,KAAK,OACLjB,UAAW8E,IAAW,+BAAgC,CACpD,aAAcX,EAAOgD,UAEvBzC,KAAK,UACLK,YAAY,uBACZJ,MAAOjD,KAAKe,MAAM0E,QAClB/C,SAAU1C,KAAK0C,WAEhBD,EAAOgD,SACN,qBAAKnH,UAAU,mBAAf,SAAmCmE,EAAOgD,aAG9C,qBAAKnH,UAAU,aAAf,SACE,0BACEA,UAAU,+BACV+E,YAAY,sBACZL,KAAK,qBACLC,MAAOjD,KAAKe,MAAM2E,mBAClBhD,SAAU1C,KAAK0C,aAGnB,0CACA,qBAAKpE,UAAU,aAAf,SACE,uBACEiB,KAAK,OACLjB,UAAU,+BACV0E,KAAK,UACLC,MAAOjD,KAAKe,MAAM4F,QAClBjE,SAAU1C,KAAK0C,aAGnB,qBAAKpE,UAAU,aAAf,SACE,yBACEA,UAAU,+BACV0E,KAAK,WACLC,MAAOjD,KAAKe,MAAMyE,SAClB9C,SAAU1C,KAAK0C,SAJjB,UAME,wBAAQO,MAAO,EAAf,6BACA,wBAAQA,MAAO,EAAf,kBACA,wBAAQA,MAAO,EAAf,oBACA,wBAAQA,MAAO,EAAf,sBAIJ,qBAAK3E,UAAU,aAAf,SACE,yBACEA,UAAU,+BACV0E,KAAK,SACLC,MAAOjD,KAAKe,MAAMoF,OAClBzD,SAAU1C,KAAK0C,SAJjB,UAME,wBAAQO,MAAM,GAAd,2BACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,OAAd,uBAIJ,uBACE1D,KAAK,SACLjB,UAAU,mD,GA7HCgC,aAiJdC,gBAJS,SAAAQ,GAAK,MAAK,CAChC0B,OAAQ1B,EAAM0B,UAKd,CAAEoE,eHjJ0B,SAC5B1B,EACA3B,EACAvE,GAH4B,8CAIzB,WAAMC,GAAN,SAAAC,EAAA,+EAEKC,IAAMC,KAAN,uBAA2B8F,GAAc3B,GAF9C,OAGDvE,EAAQK,KAAR,wBAA8B6F,IAC9BjG,EAAS,CACPK,KAAMhB,EACNiB,QAAS,KANV,gDASDN,EAAS,CACPK,KAAMhB,EACNiB,QAAS,KAAIC,SAASC,OAXvB,yDAJyB,wDG+Ifa,CAGbmG,ICjJII,G,kDACJ,aAAe,IAAD,8BACZ,gBAEK/F,MAAQ,CACXlB,GAAI,GACJiE,gBAAiB,GACjB2B,QAAS,GACTC,mBAAoB,GACpBS,OAAQ,GACRX,SAAU,GACVmB,QAAS,GACT1G,kBAAmB,GACnB8G,UAAW,GACXtE,OAAQ,IAEV,EAAKC,SAAW,EAAKA,SAASrC,KAAd,gBAChB,EAAKsC,SAAW,EAAKA,SAAStC,KAAd,gBAhBJ,E,qDAmBd,WACE,MAA8BL,KAAKF,MAAM+E,MAAMC,OAAvCK,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,MACpBpF,KAAKF,MAAMkH,eAAe7B,EAAYC,EAAOpF,KAAKF,MAAMb,W,uCAG1D,SAA0B2D,GACpBA,EAAUH,QACZzC,KAAK6C,SAAS,CAAEJ,OAAQG,EAAUH,SAGpC,MAUIG,EAAUY,aATZ3D,EADF,EACEA,GACAiE,EAFF,EAEEA,gBACA2B,EAHF,EAGEA,QACAC,EAJF,EAIEA,mBACAS,EALF,EAKEA,OACAX,EANF,EAMEA,SACAmB,EAPF,EAOEA,QACA1G,EARF,EAQEA,kBACA8G,EATF,EASEA,UAGF/G,KAAK6C,SAAS,CACZhD,KACAiE,kBACA2B,UACAC,qBACAS,SACAX,WACAmB,UACA1G,oBACA8G,gB,sBAIJ,SAASjE,GACP9C,KAAK6C,SAAL,eAAiBC,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,sBAG5C,SAASH,GACPA,EAAEI,iBAEF,IAAM4D,EAAoB,CACxBjH,GAAIG,KAAKe,MAAMlB,GACfiE,gBAAiB9D,KAAKe,MAAM+C,gBAC5B2B,QAASzF,KAAKe,MAAM0E,QACpBC,mBAAoB1F,KAAKe,MAAM2E,mBAC/BS,OAAQnG,KAAKe,MAAMoF,OACnBX,SAAUxF,KAAKe,MAAMyE,SACrBmB,QAAS3G,KAAKe,MAAM4F,QACpB1G,kBAAmBD,KAAKe,MAAMd,kBAC9B8G,UAAW/G,KAAKe,MAAMgG,WAIxB/G,KAAKF,MAAMmH,kBACTjH,KAAKe,MAAMd,kBACXD,KAAKe,MAAM+C,gBACXgD,EACA9G,KAAKF,MAAMb,W,oBAIf,WACE,IAAQwD,EAAWzC,KAAKe,MAAhB0B,OACR,OACE,qBAAKnE,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,cAACF,EAAA,EAAD,CACEC,GAAE,wBAAmB2B,KAAKe,MAAMd,mBAChC3B,UAAU,gBAFZ,mCAMA,oBAAIA,UAAU,wBAAd,iCACA,oBAAGA,UAAU,mBAAb,2BACiB0B,KAAKe,MAAMd,kBAD5B,sBACkE,IAC/DD,KAAKe,MAAM+C,gBAAiB,OAE/B,uBAAMnB,SAAU3C,KAAK2C,SAArB,UACE,sBAAKrE,UAAU,aAAf,UACE,uBACEiB,KAAK,OACLjB,UAAW8E,IAAW,+BAAgC,CACpD,aAAcX,EAAOgD,UAEvBzC,KAAK,UACLK,YAAY,uBACZJ,MAAOjD,KAAKe,MAAM0E,QAClB/C,SAAU1C,KAAK0C,WAEhBD,EAAOgD,SACN,qBAAKnH,UAAU,mBAAf,SAAmCmE,EAAOgD,aAG9C,qBAAKnH,UAAU,aAAf,SACE,0BACEA,UAAU,+BACV+E,YAAY,sBACZL,KAAK,qBACLC,MAAOjD,KAAKe,MAAM2E,mBAClBhD,SAAU1C,KAAK0C,aAGnB,0CACA,qBAAKpE,UAAU,aAAf,SACE,uBACEiB,KAAK,OACLjB,UAAU,+BACV0E,KAAK,UACLC,MAAOjD,KAAKe,MAAM4F,QAClBjE,SAAU1C,KAAK0C,aAGnB,qBAAKpE,UAAU,aAAf,SACE,yBACEA,UAAU,+BACV0E,KAAK,WACLC,MAAOjD,KAAKe,MAAMyE,SAClB9C,SAAU1C,KAAK0C,SAJjB,UAME,wBAAQO,MAAO,EAAf,6BACA,wBAAQA,MAAO,EAAf,kBACA,wBAAQA,MAAO,EAAf,oBACA,wBAAQA,MAAO,EAAf,sBAIJ,qBAAK3E,UAAU,aAAf,SACE,yBACEA,UAAU,+BACV0E,KAAK,SACLC,MAAOjD,KAAKe,MAAMoF,OAClBzD,SAAU1C,KAAK0C,SAJjB,UAME,wBAAQO,MAAM,GAAd,2BACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,OAAd,uBAIJ,uBACE1D,KAAK,SACLjB,UAAU,mD,GAtKIgC,aA6LjBC,gBALS,SAAAQ,GAAK,MAAK,CAChCyC,aAAczC,EAAM8C,QAAQL,aAC5Bf,OAAQ1B,EAAM0B,UAKd,CAAEuE,eJ7J0B,SAC5B7B,EACAC,EACAnG,GAH4B,8CAIzB,WAAMC,GAAN,eAAAC,EAAA,+EAEiBC,IAAM4B,IAAN,uBAA0BmE,EAA1B,YAAwCC,IAFzD,OAEKnE,EAFL,OAGD/B,EAAS,CACPK,KAAMX,EACNY,QAASyB,EAAIvB,OALd,gDAQDT,EAAQK,KAAK,cARZ,yDAJyB,uDI6JV2H,kBJ7Ia,SAC/B9B,EACAC,EACA5B,EACAvE,GAJ+B,8CAK5B,WAAMC,GAAN,SAAAC,EAAA,+EAEKC,IAAM8H,MAAN,uBAA4B/B,EAA5B,YAA0CC,GAAS5B,GAFxD,OAGDvE,EAAQK,KAAR,wBAA8B6F,IAC9BjG,EAAS,CACPK,KAAMhB,EACNiB,QAAS,KANV,gDASDN,EAAS,CACPK,KAAMhB,EACNiB,QAAS,KAAIC,SAASC,OAXvB,yDAL4B,wDI2IlBa,CAGbuG,ICrMIK,G,uKACJ,WACMnH,KAAKF,MAAMgC,SAASC,YACtB/B,KAAKF,MAAMb,QAAQK,KAAK,gB,oBAG5B,WACE,OACE,qBAAKhB,UAAU,UAAf,SACE,qBAAKA,UAAU,wCAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,wBAAf,UACE,oBAAIA,UAAU,iBAAd,8CAGA,mBAAGA,UAAU,OAAb,2EAGA,uBACA,cAACF,EAAA,EAAD,CAAME,UAAU,8BAA8BD,GAAG,YAAjD,qBAGA,cAACD,EAAA,EAAD,CAAME,UAAU,gCAAgCD,GAAG,SAAnD,kC,GAvBMiC,aA2CPC,gBAJS,SAAAQ,GAAK,MAAK,CAChCe,SAAUf,EAAMe,YAGHvB,CAAyB4G,IC1ClCC,G,kDACJ,aAAe,IAAD,8BACZ,gBAEKrG,MAAQ,CACXsG,SAAU,GACVnF,SAAU,GACVoF,SAAU,GACVC,gBAAiB,GACjB9E,OAAQ,IAEV,EAAKC,SAAW,EAAKA,SAASrC,KAAd,gBAChB,EAAKsC,SAAW,EAAKA,SAAStC,KAAd,gBAXJ,E,qDAcd,WACML,KAAKF,MAAMgC,SAASC,YACtB/B,KAAKF,MAAMb,QAAQK,KAAK,gB,uCAI5B,SAA0BsD,GACpBA,EAAUH,QACZzC,KAAK6C,SAAS,CAAEJ,OAAQG,EAAUH,W,sBAItC,SAASK,GACPA,EAAEI,iBACF,IAAMsE,EAAU,CACdH,SAAUrH,KAAKe,MAAMsG,SACrBnF,SAAUlC,KAAKe,MAAMmB,SACrBoF,SAAUtH,KAAKe,MAAMuG,SACrBC,gBAAiBvH,KAAKe,MAAMwG,iBAG9BvH,KAAKF,MAAM2H,cAAcD,EAASxH,KAAKF,MAAMb,W,sBAG/C,SAAS6D,GACP9C,KAAK6C,SAAL,eAAiBC,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,oBAG5C,WACE,IAAQR,EAAWzC,KAAKe,MAAhB0B,OACR,OACE,qBAAKnE,UAAU,WAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,oBAAIA,UAAU,wBAAd,qBACA,mBAAGA,UAAU,mBAAb,iCACA,uBAAMqE,SAAU3C,KAAK2C,SAArB,UACE,sBAAKrE,UAAU,aAAf,UACE,uBACEiB,KAAK,OACLjB,UAAW8E,IAAW,+BAAgC,CACpD,aAAcX,EAAOP,WAEvBmB,YAAY,YACZL,KAAK,WACLC,MAAOjD,KAAKe,MAAMmB,SAClBQ,SAAU1C,KAAK0C,WAEhBD,EAAOP,UACN,qBAAK5D,UAAU,mBAAf,SAAmCmE,EAAOP,cAG9C,sBAAK5D,UAAU,aAAf,UACE,uBACEiB,KAAK,OACLjB,UAAW8E,IAAW,+BAAgC,CACpD,aAAcX,EAAO4E,WAEvBhE,YAAY,2BACZL,KAAK,WACLC,MAAOjD,KAAKe,MAAMsG,SAClB3E,SAAU1C,KAAK0C,WAEhBD,EAAO4E,UACN,qBAAK/I,UAAU,mBAAf,SAAmCmE,EAAO4E,cAG9C,sBAAK/I,UAAU,aAAf,UACE,uBACEiB,KAAK,WACLjB,UAAW8E,IAAW,+BAAgC,CACpD,aAAcX,EAAO6E,WAEvBjE,YAAY,WACZL,KAAK,WACLC,MAAOjD,KAAKe,MAAMuG,SAClB5E,SAAU1C,KAAK0C,WAEhBD,EAAO6E,UACN,qBAAKhJ,UAAU,mBAAf,SAAmCmE,EAAO6E,cAG9C,sBAAKhJ,UAAU,aAAf,UACE,uBACEiB,KAAK,WACLjB,UAAW8E,IAAW,+BAAgC,CACpD,aAAcX,EAAO8E,kBAEvBlE,YAAY,mBACZL,KAAK,kBACLC,MAAOjD,KAAKe,MAAMwG,gBAClB7E,SAAU1C,KAAK0C,WAEhBD,EAAO8E,iBACN,qBAAKjJ,UAAU,mBAAf,SACGmE,EAAO8E,qBAId,uBAAOhI,KAAK,SAASjB,UAAU,gD,GAnHxBgC,aAuIRC,gBAJS,SAAAQ,GAAK,MAAK,CAChC0B,OAAQ1B,EAAM0B,OACdX,SAAUf,EAAMe,YAIhB,CAAE2F,cjB1IyB,SAACD,EAASvI,GAAV,8CAAsB,WAAMC,GAAN,SAAAC,EAAA,+EAEzCC,IAAMC,KAAK,sBAAuBmI,GAFO,OAG/CvI,EAAQK,KAAK,UACbJ,EAAS,CACPK,KAAMhB,EACNiB,QAAS,KANoC,gDAS/CN,EAAS,CACPK,KAAMhB,EACNiB,QAAS,KAAIC,SAASC,OAXuB,yDAAtB,wDiBwIda,CAGb6G,IC1IIM,G,kDACJ,aAAe,IAAD,8BACZ,gBACK3G,MAAQ,CACXsG,SAAU,GACVC,SAAU,GACV7E,OAAQ,IAEV,EAAKC,SAAW,EAAKA,SAASrC,KAAd,gBAChB,EAAKsC,SAAW,EAAKA,SAAStC,KAAd,gBARJ,E,qDAWd,WACML,KAAKF,MAAMgC,SAASC,YACtB/B,KAAKF,MAAMb,QAAQK,KAAK,gB,uCAI5B,SAA0BsD,GACpBA,EAAUd,SAASC,YACrB/B,KAAKF,MAAMb,QAAQK,KAAK,cAGtBsD,EAAUH,QACZzC,KAAK6C,SAAS,CAAEJ,OAAQG,EAAUH,W,sBAItC,SAASK,GACPA,EAAEI,iBACF,IAAMyE,EAAe,CACnBN,SAAUrH,KAAKe,MAAMsG,SACrBC,SAAUtH,KAAKe,MAAMuG,UAGvBtH,KAAKF,MAAM8H,MAAMD,K,sBAGnB,SAAS7E,GACP9C,KAAK6C,SAAL,eAAiBC,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,oBAG5C,WACE,IAAQR,EAAWzC,KAAKe,MAAhB0B,OACR,OACE,qBAAKnE,UAAU,QAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,oBAAIA,UAAU,wBAAd,oBACA,uBAAMqE,SAAU3C,KAAK2C,SAArB,UACE,sBAAKrE,UAAU,aAAf,UACE,uBACEiB,KAAK,OACLjB,UAAW8E,IAAW,+BAAgC,CACpD,aAAcX,EAAO4E,WAEvBhE,YAAY,gBACZL,KAAK,WACLC,MAAOjD,KAAKe,MAAMsG,SAClB3E,SAAU1C,KAAK0C,WAEhBD,EAAO4E,UACN,qBAAK/I,UAAU,mBAAf,SAAmCmE,EAAO4E,cAG9C,sBAAK/I,UAAU,aAAf,UACE,uBACEiB,KAAK,WACLjB,UAAW8E,IAAW,+BAAgC,CACpD,aAAcX,EAAO6E,WAEvBjE,YAAY,WACZL,KAAK,WACLC,MAAOjD,KAAKe,MAAMuG,SAClB5E,SAAU1C,KAAK0C,WAEhBD,EAAO6E,UACN,qBAAKhJ,UAAU,mBAAf,SAAmCmE,EAAO6E,cAG9C,uBAAO/H,KAAK,SAASjB,UAAU,gD,GAjF3BgC,aAsGLC,gBALS,SAAAQ,GAAK,MAAK,CAChCe,SAAUf,EAAMe,SAChBW,OAAQ1B,EAAM0B,UAKd,CAAEmF,MlBzFiB,SAAAD,GAAY,8CAAI,WAAMzI,GAAN,mBAAAC,EAAA,+EAGfC,IAAMC,KAAK,mBAAoBsI,GAHhB,OAG3B1G,EAH2B,OAKzBE,EAAUF,EAAIvB,KAAdyB,MAERK,aAAaqG,QAAQ,WAAY1G,GAEjCD,EAAYC,GAEN2G,EAAUC,YAAW5G,GAE3BjC,EAAS,CACPK,KAAMT,EACNU,QAASsI,IAfsB,kDAkBjC5I,EAAS,CACPK,KAAMhB,EACNiB,QAAS,KAAIC,SAASC,OApBS,0DAAJ,wDkBuFlBa,CAGbmH,I,8CCrFanH,gBAJS,SAAAQ,GAAK,MAAK,CAChCe,SAAUf,EAAMe,YAGHvB,EArBM,SAAC,GAAD,IAAcD,EAAd,EAAG0H,UAAsBlG,EAAzB,EAAyBA,SAAamG,EAAtC,0BACnB,cAACC,EAAA,EAAD,2BACMD,GADN,IAEEE,OAAQ,SAAArI,GAAK,OACa,IAAxBgC,EAASC,WACP,cAACzB,EAAD,eAAeR,IAEf,cAACsI,GAAA,EAAD,CAAU/J,GAAG,kBCUfgK,GAAW7G,aAAa6G,SAE9B,GAAIA,GAAU,CACZnH,EAAYmH,IACZ,IAAMC,GAAmBP,YAAWM,IACpCjE,GAAMlF,SAAS,CACbK,KAAMT,EACNU,QAAS8I,KAGX,IAAMC,GAAcC,KAAKC,MAAQ,IAC7BH,GAAiBI,IAAMH,KACzBnE,GAAMlF,SAASqC,KACff,OAAOmB,SAASC,KAAO,K,IAqDZ+G,G,4JAhDb,WACE,OACE,cAAC,IAAD,CAAUvE,MAAOA,GAAjB,SACE,cAAC,IAAD,UACE,sBAAK9F,UAAU,MAAf,UACE,cAAC,EAAD,IAKA,cAAC4J,EAAA,EAAD,CAAOU,OAAK,EAACC,KAAK,IAAIb,UAAWb,KACjC,cAACe,EAAA,EAAD,CAAOU,OAAK,EAACC,KAAK,YAAYb,UAAWZ,KACzC,cAACc,EAAA,EAAD,CAAOU,OAAK,EAACC,KAAK,SAASb,UAAWN,KAKtC,eAACoB,EAAA,EAAD,WACE,cAAC,GAAD,CAAcF,OAAK,EAACC,KAAK,aAAab,UAAWrH,IACjD,cAAC,GAAD,CAAciI,OAAK,EAACC,KAAK,cAAcb,UAAW1F,IAClD,cAAC,GAAD,CACEsG,OAAK,EACLC,KAAK,qBACLb,UAAWpD,KAEb,cAAC,GAAD,CACEgE,OAAK,EACLC,KAAK,oBACLb,UAAW5B,KAEb,cAAC,GAAD,CACEwC,OAAK,EACLC,KAAK,sBACLb,UAAWtB,KAEb,cAAC,GAAD,CACEkC,OAAK,EACLC,KAAK,wCACLb,UAAWlB,mB,GAvCTxG,aC3BHyI,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASrB,OACP,cAAC,IAAMsB,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.e8092429.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst CreateProjectButton = ()=> {\r\n    return (\r\n        <React.Fragment>\r\n            <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n                Create a Project\r\n            </Link>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default CreateProjectButton;","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n//Types for BACKLOG ACTIONS\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n  const res = await axios.get(\"/api/project/all\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      \"Are you sure? This will delete the project and all the data related to it\"\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    project.projectIdentifier\r\n                  )}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteProject }\r\n)(ProjectItem);","import React, { Component } from 'react';\r\nimport CreateProjectButton from './Project/CreateProjectButton';\r\nimport ProjectItem from './Project/ProjectItem';\r\nimport {connect} from 'react-redux';\r\nimport {getProjects} from '../actions/projectActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Dashboard extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getProjects();\r\n    }\r\n\r\n    render() {\r\n\r\n        const {projects} = this.props.project\r\n\r\n        return (\r\n            <div className=\"projects\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"display-4 text-center\">Projects</h1>\r\n                        <br />\r\n                            <CreateProjectButton />\r\n                        <br />\r\n                        <hr />\r\n                        {\r\n                            projects.map(project => (\r\n                                <ProjectItem key={project.id} project={project}/>\r\n                            ))\r\n                        }\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n    project:PropTypes.object.isRequired,\r\n    getProjects:PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    project:state.project\r\n})\r\n\r\nexport default connect(mapStateToProps,{getProjects})(Dashboard);","import axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\"\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n  try {\r\n    // post => Login Request\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n    // extract token from res.data\r\n    const { token } = res.data;\r\n    // store the token in the localStorage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    // set our token in header ***\r\n    setJWTToken(token);\r\n    // decode token on React\r\n    const decoded = jwt_decode(token);\r\n    // dispatch to our securityReducer\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJWTToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1\" />\r\n              {user.fullName}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logout }\r\n)(Header);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {createProject} from '../../actions/projectActions';\r\nimport classnames from 'classnames';\r\n\r\nclass AddProject extends Component {\r\n    constructor(){\r\n        super()\r\n\r\n        this.state = {\r\n            projectName: \"\",\r\n            projectIdentifier: \"\",\r\n            description: \"\",\r\n            start_date: \"\",\r\n            end_date: \"\",\r\n            errors: {}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    //LifeCycle Hooks\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({errors:nextProps.errors})\r\n        }\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name] : e.target.value});\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n        const newProject = {\r\n            projectName: this.state.projectName,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            description: this.state.description,\r\n            start_date: this.state.start_date,\r\n            end_date: this.state.end_date\r\n        };\r\n        this.props.createProject(newProject,this.props.history)\r\n    }\r\n\r\n    render() {\r\n        const {errors} = this.state\r\n        return (\r\n                <div>\r\n            <div className=\"project\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 m-auto\">\r\n                        <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                        <hr />\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className={classnames(\"form-control form-control-lg\",\r\n                                {\r\n                                    \"is-invalid\" : errors.projectName\r\n                                })} placeholder=\"Project Name\" name=\"projectName\" value={this.state.projectName} onChange={this.onChange} />\r\n                                {errors.projectName && (\r\n                                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className={classnames(\"form-control form-control-lg\",{\r\n                                    \"is-invalid\" : errors.projectIdentifier\r\n                                })} placeholder=\"Unique Project ID\" name=\"projectIdentifier\" value={this.state.projectIdentifier} onChange={this.onChange} \r\n                                    />\r\n                                    {errors.projectIdentifier && (\r\n                                        <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\r\n                                    )}\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group\">\r\n                                <textarea className={classnames(\"form-control form-control-lg\",{\r\n                                    \"is-invalid\" : errors.description\r\n                                })} placeholder=\"Project Description\" name=\"description\" value={this.state.description}  onChange={this.onChange} ></textarea>\r\n                                {errors.description && (\r\n                                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                                )}\r\n                            </div>\r\n                            <h6>Start Date</h6>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"date\" className=\"form-control form-control-lg\" name=\"start_date\" value={this.state.start_date}  onChange={this.onChange} />\r\n                            </div>\r\n                            <h6>Estimated End Date</h6>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"date\" className=\"form-control form-control-lg\" name=\"end_date\" value={this.state.end_date}  onChange={this.onChange} />\r\n                            </div>\r\n                            <div className=\"d-grid mt-4\">\r\n                                <input type=\"submit\" className=\"btn btn-primary\" />\r\n                            </div>\r\n                            \r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n        )\r\n    }\r\n}\r\n\r\nAddProject.propTypes = {\r\n    createProject : PropTypes.func.isRequired,\r\n    errors : PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    errors : state.errors\r\n})  \r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {createProject}\r\n    )(AddProject);\r\n","import {GET_ERRORS} from '../actions/types';\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload\r\n      };\r\n\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload\r\n      };\r\n\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          project => project.projectIdentifier !== action.payload\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload\r\n      };\r\n\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload\r\n      };\r\n\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          project_task => project_task.projectSequence !== action.payload\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  validToken: false,\r\n  user: {}\r\n};\r\n\r\nconst booleanActionPayload = payload => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initalState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n      ReactReduxDevTools\r\n    )\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  //set state\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.description}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project.project,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProject, createProject }\r\n)(UpdateProject);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n  onDeleteClick(backlog_id, pt_id) {\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  }\r\n  render() {\r\n    const { project_task } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (project_task.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \"HIGH\";\r\n    }\r\n\r\n    if (project_task.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \"MEDIUM\";\r\n    }\r\n\r\n    if (project_task.priority === 3) {\r\n      priorityClass = \"bg-info text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${\r\n              project_task.projectSequence\r\n            }`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              project_task.projectIdentifier,\r\n              project_task.projectSequence\r\n            )}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired\r\n};\r\nexport default connect(\r\n  null,\r\n  { deleteProjectTask }\r\n)(ProjectTask);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"./types\";\r\n\r\n//Fix bug with priority in Spring Boot Server, needs to check null first\r\nexport const addProjectTask = (\r\n  backlog_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      `You are deleting project task ${pt_id}, this action cannot be undone`\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: pt_id\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_tasks_prop } = this.props;\r\n\r\n    const tasks = project_tasks_prop.map(project_task => (\r\n      <ProjectTask key={project_task.id} project_task={project_task} />\r\n    ));\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n        todoItems.push(tasks[i]);\r\n      }\r\n\r\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n        inProgressItems.push(tasks[i]);\r\n      }\r\n\r\n      if (tasks[i].props.project_task.status === \"DONE\") {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {todoItems}\r\n            {\r\n              // insert tasks here\r\n            }\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inProgressItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\n\r\nclass ProjectBoard extends Component {\r\n  //constructor to handle errors\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        //PROJECT IDENTIFIER BUG\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              No Project Tasks on this board\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog project_tasks_prop={project_tasks} />;\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(errors, project_tasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getBacklog }\r\n)(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  // on change\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  //on submit\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate\r\n    };\r\n\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addProjectTask }\r\n)(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask\r\n} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: \"\",\r\n      create_At: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At\r\n    } = nextProps.project_task;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const UpdateProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      create_At: this.state.create_At\r\n    };\r\n\r\n    // console.log(UpdateProjectTask);\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      UpdateProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">\r\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\r\n                {this.state.projectSequence}{\" \"}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjectTask, updateProjectTask }\r\n)(UpdateProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">\r\n                  Personal Project Management Tool\r\n                </h1>\r\n                <p className=\"lead\">\r\n                  Create your account to join active projects or start your own\r\n                </p>\r\n                <hr />\r\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullName\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address (Username)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  security: state.security\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createNewUser }\r\n)(Register);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const LoginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.login(LoginRequest);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login }\r\n)(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={props =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              //Public Routes\n            }\n\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n\n            {\n              //Private Routes\n            }\n            <Switch>\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n              <SecuredRoute\n                exact\n                path=\"/updateProject/:id\"\n                component={UpdateProject}\n              />\n              <SecuredRoute\n                exact\n                path=\"/projectBoard/:id\"\n                component={ProjectBoard}\n              />\n              <SecuredRoute\n                exact\n                path=\"/addProjectTask/:id\"\n                component={AddProjectTask}\n              />\n              <SecuredRoute\n                exact\n                path=\"/updateProjectTask/:backlog_id/:pt_id\"\n                component={UpdateProjectTask}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}